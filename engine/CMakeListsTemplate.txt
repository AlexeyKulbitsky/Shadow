set(SH_ENTITY_SRC
  source/entity/Component.cpp
  source/entity/ComponentsFactory.cpp
  source/entity/Entity.cpp
  source/entity/System.cpp
  source/entity/components/CameraComponent.cpp
  source/entity/components/LightComponent.cpp
  source/entity/components/RenderComponent.cpp
  source/entity/components/ScriptComponent.cpp
  source/entity/components/TerrainComponent.cpp
  source/entity/components/TransformComponent.cpp
  source/entity/systems/LightSystem.cpp
  source/entity/systems/RenderSystem.cpp
  source/entity/systems/ScriptSystem.cpp
  source/entity/systems/TerrainSystem.cpp
  source/entity/systems/TransformSystem.cpp
)

set(SH_FONT_SRC
  source/font/Font.cpp
  source/font/FontManager.cpp
)

set(SH_GUI_SRC
  source/gui/Button.cpp
  source/gui/ButtonGroup.cpp
  source/gui/ComboBox.cpp
  source/gui/FloatLineEdit.cpp
  source/gui/GuiManager.cpp
  source/gui/HorizontalLayout.cpp
  source/gui/ImageWidget.cpp
  source/gui/IntLineEdit.cpp
  source/gui/Label.cpp
  source/gui/Layout.cpp
  source/gui/LineEdit.cpp
  source/gui/Menu.cpp
  source/gui/MenuBar.cpp
  source/gui/ScrollWidget.cpp
  source/gui/SliderWidget.cpp
  source/gui/Sprite.cpp
  source/gui/SpriteManager.cpp
  source/gui/SpriteWidget.cpp
  source/gui/Style.cpp
  source/gui/Text.cpp
  source/gui/ToolBar.cpp
  source/gui/TreeWidget.cpp
  source/gui/VerticalLayout.cpp
  source/gui/Widget.cpp
  source/gui/Window.cpp
)

if(WIN32)
  set(SH_PLATFORM_SPECIFIC_IO_SRC
    source/io/win32/WindowsFileSystem.cpp
  )
elseif(ANDROID)
  set(SH_PLATFORM_SPECIFIC_IO_SRC
    source/io/android/AndroidFileSystem.cpp
  )
elseif(APPLE)
  set(SH_PLATFORM_SPECIFIC_IO_SRC
    source/io/mac/MacFileSystem.mm
  )
endif()

set(SH_IO_SRC
  source/io/File.cpp
  source/io/FileSystem.cpp
  ${SH_PLATFORM_SPECIFIC_IO_SRC}
)

set(SH_JOBS_SRC
  source/jobs/JobQueue.cpp
  source/jobs/JobScheduler.cpp
  source/jobs/Test.cpp
  source/jobs/Worker.cpp
)

set(SH_MATH_SRC
  source/math/AABB.cpp
  source/math/Matrix3.cpp
  source/math/Matrix4.cpp
  source/math/Plane.cpp
  source/math/Quaternion.cpp
  source/math/Rect.cpp
  source/math/Sphere.cpp
  source/math/Vector2.cpp
  source/math/Vector2Int.cpp
  source/math/Vector3.cpp
  source/math/Vector3Int.cpp
  source/math/Vector4.cpp
  source/math/Vector4Int.cpp
)

if(WIN32)
  set(SH_PLATFORM_SRC
    source/platform/win32/Win32Device.cpp
  )
elseif(ANDROID)
  set(SH_PLATFORM_SRC
    source/platform/android/AndroidDevice.cpp
  )
elseif(APPLE)
  set(SH_PLATFORM_SRC
    source/platform/mac/MacDevice.mm
  )
endif()

set(SH_RESOURCES_SRC
  source/resources/ResourceManager.cpp
)

set(SH_SCENE_SRC
  source/scene/Camera.cpp
  source/scene/GeometryGenerator.cpp
  source/scene/Light.cpp
  source/scene/Mesh.cpp
  source/scene/MeshBase.cpp
  source/scene/Model.cpp
  source/scene/ModelBase.cpp
  source/scene/Picker.cpp
  source/scene/Scene.cpp
  source/scene/SceneManager.cpp
  source/scene/ModelLoader/AssimpModelLoader.cpp
  source/scene/ModelLoader/ModelLoader.cpp
  source/scene/ModelLoader/TinyObjModelLoader.cpp
)

set(SH_SERIALIZATION_SRC
  source/serialization/ObjectFactory.cpp
  source/serialization/Property.cpp
  source/serialization/Serializable.cpp
  source/serialization/Serializaer.cpp
  source/serialization/XMLSerializer.cpp
)

set(SH_VIDEO_SRC
  source/video/BlendingState.cpp
  source/video/CommandBuffer.cpp
  source/video/CommandPool.cpp
  source/video/DepthStencilState.cpp
  source/video/Driver.cpp
  source/video/GpuParams.cpp
  source/video/GpuPipelineParamsInfo.cpp
  source/video/Image.cpp
  source/video/IndexBuffer.cpp
  source/video/Material.cpp
  source/video/MaterialParam.cpp
  source/video/MaterialParams.cpp
  source/video/Painter.cpp
  source/video/RasterizationState.cpp
  source/video/Renderable.cpp
  source/video/RenderBatchManager.cpp
  source/video/RenderPass.cpp
  source/video/RenderPipeline.cpp
  source/video/RenderTarget.cpp
  source/video/RenderTechnique.cpp
  source/video/Sampler.cpp
  source/video/Shader.cpp
  source/video/Texture.cpp
  source/video/TextureManager.cpp
  source/video/VertexBuffer.cpp
  source/video/VertexDeclaration.cpp
  source/video/TextureLoader/TextureLoader.cpp
)

set(SH_OPENGL_COMMON_SRC
  source/video/GL/GLCommandBuffer.cpp
  source/video/GL/GLIndexBuffer.cpp
  source/video/GL/GLRenderTarget.cpp
  source/video/GL/GLShader.cpp
  source/video/GL/GLTexture.cpp
  source/video/GL/GLVertexBuffer.cpp
  source/video/GL/Managers/GLCommandBufferManager.cpp
  source/video/GL/Managers/GLHardwareBufferManager.cpp
  source/video/GL/Managers/GLRenderStateManager.cpp
  source/video/GL/Managers/GLTextureManager.cpp
)

if(WIN32)
  set(SH_OPENGL_CONTEXT_SRC
    source/video/GL/Managers/GLContext/WGLContextManager.cpp
  )
elseif(ANDROID)
  set(SH_OPENGL_CONTEXT_SRC
    source/video/GL/Managers/GLContext/EGLContextManager.cpp
  )
elseif(APPLE)
  set(SH_OPENGL_CONTEXT_SRC
    source/video/GL/Managers/GLContext/NSGLContextManager.mm
  )
endif()