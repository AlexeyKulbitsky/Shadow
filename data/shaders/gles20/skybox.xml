<technique name="skybox">

<pass name="firstPass" layer="background">

	<renderstate>
		<depthTest val="false"/>
		<frontFace val="clockWise"/>
	</renderstate>
		
	<constants>
		<uniforms>
			<uniform name="matMVP" type="mat4" val="camera.viewRotationProjectionMatrix"/>
		</uniforms>

		<samplers>
			<sampler name="cubeMap" type="cube" tilingU="clamp" tilingV="clamp" tilingW="clamp" filter="bilinear"/>
		</samplers>
	</constants>
	
	<attributes>
		<position 	type="vec3" name="aPosition"/>
	</attributes>
	
	<shader language="GLSL" api="GLES20">
		<vertexShader>
		<![CDATA[

			attribute vec3 aPosition;

			uniform mat4 matMVP;

			varying vec3 vUV;

			void main() 
			{
				gl_Position = matMVP * vec4(aPosition, 1.0);
				vUV = aPosition;
			}
	
		]]>
		</vertexShader>

		<fragmentShader>
		<![CDATA[

			precision mediump float;
	
			uniform samplerCube cubeMap;
			
			varying vec3 vUV;
	
			void main() 
			{
				vec3 col = textureCube(cubeMap, vUV).xyz;
				gl_FragColor = vec4(col.xyz, 1.0);
			} 
	
		]]>	
		</fragmentShader>
	</shader>

</pass>

</technique>